name: Backend CI

on:
  push:
    branches: [main, develop]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.11']
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: medscan
          POSTGRES_PASSWORD: testpass123
          POSTGRES_DB: medscan_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run Black formatting check
        run: black --check .
        continue-on-error: false
      
      - name: Run isort import sorting check
        run: isort --check-only . --profile black
        continue-on-error: false
      
      - name: Run Pylint
        run: pylint **/*.py --exit-zero
        continue-on-error: true
      
      - name: Run Flake8
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        continue-on-error: false
      
      - name: Run migrations check
        run: python manage.py makemigrations --check --dry-run
        env:
          DATABASE_URL: postgresql://medscan:testpass123@localhost:5432/medscan_test
          SECRET_KEY: test-secret-key-for-ci
          DEBUG: False
      
      - name: Run Django system checks
        run: python manage.py check --deploy
        env:
          DATABASE_URL: postgresql://medscan:testpass123@localhost:5432/medscan_test
          SECRET_KEY: test-secret-key-for-ci
          DEBUG: False
          ALLOWED_HOSTS: localhost,127.0.0.1
      
      - name: Run tests with coverage
        run: |
          pytest --cov=. --cov-report=xml --cov-report=html --cov-report=term
        env:
          DATABASE_URL: postgresql://medscan:testpass123@localhost:5432/medscan_test
          SECRET_KEY: test-secret-key-for-ci
          DEBUG: True
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./backend/coverage.xml
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false
      
      - name: Upload coverage HTML report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: backend/htmlcov
          retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit
      
      - name: Run Safety check
        run: safety check --json || true
        continue-on-error: true
      
      - name: Run Bandit security check
        run: bandit -r . -f json -o bandit-report.json || true
        continue-on-error: true
      
      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: backend/bandit-report.json
          retention-days: 30
