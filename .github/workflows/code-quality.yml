name: Code Quality

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  backend-quality:
    name: Backend Code Quality
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: backend/requirements.txt

    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy pylint bandit
        pip install -r requirements.txt

    - name: Run Black (formatting check)
      working-directory: ./backend
      run: black --check --diff .

    - name: Run isort (import sorting check)
      working-directory: ./backend
      run: isort --check-only --diff .

    - name: Run Flake8 (linting)
      working-directory: ./backend
      run: flake8 apps/ --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Run Pylint
      working-directory: ./backend
      run: pylint apps/ --fail-under=7.0 || echo "Pylint score below threshold"

    - name: Run Bandit (security linting)
      working-directory: ./backend
      run: bandit -r apps/ -ll || echo "Security issues found"

  frontend-quality:
    name: Frontend Code Quality
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run ESLint
      working-directory: ./frontend
      run: npm run lint || echo "ESLint issues found"

    - name: Check for console.log statements
      working-directory: ./frontend
      run: |
        if grep -r "console\.log" src/; then
          echo "Warning: console.log statements found in source code"
          exit 1
        fi

    - name: Check bundle size
      working-directory: ./frontend
      run: |
        npm run build
        du -sh build/ | awk '{print "Bundle size: " $1}'
