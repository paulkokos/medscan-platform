# MedScan Platform - Production Environment Configuration
# Copy this file to .env.prod and fill in with your actual production values
# NEVER commit .env.prod to version control

# ============================================================================
# CRITICAL SECURITY SETTINGS - MUST BE CONFIGURED
# ============================================================================

# Django secret key - Generate a secure random value
# Run: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=your-super-secret-key-change-this-in-production

# Database Configuration - Use strong passwords
DB_NAME=medscan_prod
DB_USER=medscan_user
DB_PASSWORD=your-very-strong-database-password-here

# JWT Secret Key (if different from SECRET_KEY)
JWT_SECRET_KEY=your-jwt-secret-key-here

# ============================================================================
# DJANGO SETTINGS
# ============================================================================

DEBUG=False
ALLOWED_HOSTS=your-domain.com,www.your-domain.com,api.your-domain.com

# Environment
ENVIRONMENT=production

# ============================================================================
# SECURITY & HTTPS
# ============================================================================

SECURE_SSL_REDIRECT=True
SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True
SECURE_HSTS_SECONDS=31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS=True
SECURE_HSTS_PRELOAD=True

# ============================================================================
# CORS CONFIGURATION
# ============================================================================

CORS_ALLOWED_ORIGINS=https://your-domain.com,https://www.your-domain.com,https://api.your-domain.com

# ============================================================================
# DATABASE
# ============================================================================

DATABASE_URL=postgresql://medscan_user:your-password@postgres:5432/medscan_prod

# ============================================================================
# JWT TOKEN CONFIGURATION
# ============================================================================

ACCESS_TOKEN_LIFETIME_MINUTES=60
REFRESH_TOKEN_LIFETIME_DAYS=7
JWT_ALGORITHM=HS256

# ============================================================================
# AWS S3 CONFIGURATION (if using S3 for media storage)
# ============================================================================

USE_S3=False  # Set to True if using AWS S3

# AWS Credentials (use IAM roles instead in production if possible)
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key

# S3 Bucket Configuration
AWS_STORAGE_BUCKET_NAME=medscan-prod-bucket
AWS_S3_REGION_NAME=us-east-1
AWS_S3_CUSTOM_DOMAIN=medscan-prod-bucket.s3.amazonaws.com

# S3 Security Settings - CRITICAL
# Never use public-read ACL in production
AWS_DEFAULT_ACL=private
AWS_QUERYSTRING_AUTH=True
AWS_S3_OBJECT_PARAMETERS={
  "CacheControl": "max-age=86400",
  "ServerSideEncryption": "AES256"
}

# ============================================================================
# LOGGING & MONITORING
# ============================================================================

LOG_LEVEL=INFO
SENTRY_DSN=  # Optional: Sentry error tracking

# ============================================================================
# EMAIL CONFIGURATION (for password resets, notifications)
# ============================================================================

EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-app-password
DEFAULT_FROM_EMAIL=noreply@medscan.com

# ============================================================================
# API DOCUMENTATION
# ============================================================================

SPECTACULAR_TITLE=MedScan Platform API
SPECTACULAR_VERSION=1.0.0
SPECTACULAR_DESCRIPTION=AI-Powered Medical Image Segmentation Platform

# ============================================================================
# GUNICORN WORKERS
# ============================================================================

GUNICORN_WORKERS=4

# ============================================================================
# ELASTICBEANSTALK (if deploying to AWS EB)
# ============================================================================

AWS_EB_ENV=False

# ============================================================================
# REACT FRONTEND CONFIGURATION
# ============================================================================

REACT_APP_API_URL=https://api.your-domain.com/api
REACT_APP_ENV=production

# ============================================================================
# ADDITIONAL PRODUCTION SETTINGS
# ============================================================================

# Session timeout (in seconds)
SESSION_COOKIE_AGE=1209600  # 2 weeks

# CSRF trusted origins
CSRF_TRUSTED_ORIGINS=https://your-domain.com,https://www.your-domain.com

# Rate limiting
RATE_LIMIT_ENABLED=True
RATE_LIMIT_AUTH_REQUESTS_PER_MINUTE=5
RATE_LIMIT_API_REQUESTS_PER_MINUTE=60

# ============================================================================
# SECURITY NOTES
# ============================================================================
# 1. Never commit this file to version control
# 2. Use strong, random passwords (minimum 32 characters)
# 3. Rotate credentials regularly
# 4. Use AWS Secrets Manager or similar for credential storage
# 5. Enable MFA for AWS console access
# 6. Monitor CloudTrail and CloudWatch for suspicious activity
# 7. Set up SSL/TLS certificates (use Let's Encrypt or AWS ACM)
# 8. Regularly update dependencies and security patches
# 9. Implement backup and disaster recovery procedures
# 10. Enable S3 bucket encryption and versioning
