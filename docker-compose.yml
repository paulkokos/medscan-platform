version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: medscan-postgres
    environment:
      POSTGRES_DB: medscan
      POSTGRES_USER: medscan
      POSTGRES_PASSWORD: medscan
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U medscan"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - medscan-network

  # Django Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: medscan-backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn medscan.wsgi:application --bind 0.0.0.0:8000 --workers 4"
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://medscan:medscan@postgres:5432/medscan
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - medscan-network

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: medscan-frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    depends_on:
      - backend
    networks:
      - medscan-network

volumes:
  postgres_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local

networks:
  medscan-network:
    driver: bridge
